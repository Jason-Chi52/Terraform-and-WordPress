name: "Github Actions Activity"

on:
  # Manual trigger in the Actions UI
  workflow_dispatch:
    inputs:
      action:
        description: "Terraform Action to Perform"
        type: choice
        options:
          - Terraform_apply
          - Terraform_destroy
        default: Terraform_apply

env:
  AWS_REGION: ${{ vars.AWS_REGION }}
  TF_IN_AUTOMATION: true
  TF_INPUT: 0

jobs:
  terraform_apply:
    name: "Terraform_apply"
    if: ${{ github.event.inputs.action == 'Terraform_apply' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2   # v4 also OK

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2   # v4 also OK
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2.0.2           # v3 also OK
        with:
          terraform_version: 1.1.9
          terraform_wrapper: false

      # ensure this run never tries to migrate a local state
      - name: Clean local Terraform state
        run: |
          rm -rf .terraform .terraform.lock.hcl terraform.tfstate terraform.tfstate.backup || true

      - name: Terraform Init (force backend)
        run: terraform init -reconfigure -input=false

      - name: Terraform Plan
        run: terraform plan -no-color

      - name: Terraform Apply
        run: terraform apply -auto-approve -input=false

      # prove resources exist in state (helps later if destroy shows 0)
      - name: List state resources (after apply)
        run: terraform state list || echo "No resources in state"

      - name: Terraform Output
        run: terraform output -no-color || true

  terraform_destroy:
    name: "Terraform_destroy"
    if: ${{ github.event.inputs.action == 'Terraform_destroy' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2.0.2
        with:
          terraform_version: 1.1.9
          terraform_wrapper: false

      - name: Clean local Terraform state
        run: |
          rm -rf .terraform .terraform.lock.hcl terraform.tfstate terraform.tfstate.backup || true

      - name: Terraform Init (force backend)
        run: terraform init -reconfigure -input=false

      - name: List state resources (before destroy)
        run: terraform state list || echo "No resources in state"

      - name: Terraform Destroy
        run: terraform destroy -auto-approve -input=false
